Increasing padding will increase the size, but increasing the margin will decrease the size. 
padding/margin goes clockwork, top right bottom left. 
em and rem, are relative, based off font size, while absolute are based on resolution (mm and inches) 
adding !imporant, to the end, will make sure it will never be overuled. 
.pink-text {
    color: pink !important;
  }
  variables of css can be done with --(name): color
  use of multiple shadows, separated with a comma. 
     box-shadow:0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
     horizontal, vertical, blur, spread, color (only the first two are needed)
Positive relative, meaning away from, so a direction of 5px top, means 5px away from the top, so it pushed down more. 
position fixed can be used on images for that cool effect, but remember it works on the NAV bar as well. 
margin of auto causes elements to move center, exerpiment this vs justify content-center.

HSL(number, 0-100%, 0-100%) hue, saturation(Gray) lightness(white) good way to use the same color but change it up. 

repeating-linear-gradient(
      45deg,
      yellow 0px,
      yellow 40px,
      black 40px,
      black 80px
    );
  }
Best way to add background, just add a URL or color to the body of the HTML.
  body {
background: url(https://cdn-media-1.freecodecamp.org/imgr/MJAkxbh.png)
  }
  trasnform skew,scale, 
  allows us to create an effect, and have it stay on that effect
      animation-fill-mode: forwards;
      allows us to control how often the animation occurs. 
    animation-iteration-count:
    animation-timing-function
    Explaination of 
    <style>

  .balls {
    border-radius: 50%;
    background: linear-gradient(
      35deg,
      #ccffff,
      #ffcccc
    );
    position: fixed;
    width: 50px;
    height: 50px;
    margin-top: 50px;
    animation-name: bounce;
    animation-duration: 2s;
    animation-iteration-count: infinite;
  }
  #ball1 {
    left:27%;
animation-timing-function: linear
  }
  #ball2 {
    left:56%;
    animation-timing-function: ease-out;

  }

  @keyframes bounce {
    0% {
      top: 0px;
    }
    100% {
      top: 249px;
    }
  }

</style>

<div class="balls" id="ball1"></div>
<div class="balls" id="ball2"></div>

cubic-bezier, even greater control of movement
first we still need animation-timing-function: cubic-bezier (0-1,same,same,same) xy xy

H tags, there should only be one h1 tag, and tags should be in order, shouldn't have a h5 tag under the h2 tag. 
header (not head seen on the top of html), footer, nav, are all treated like div. ARticle is another one, good for blogs/posts/forums. Header should be intro info. 
audio is used for clips, remember that audio needs to be followed with controls
<audio controls>
<source src="" type="">
</audio>

The for="" is important to include to select the input with the same label, but on ID. 
   <label for="email">Email:</label>
      <input type="text" id="email" name="email">
      
      <fieldset>
        <legend>What level ninja are you?</legend>
        radio code
        label
        </fieldset>
        Good looking submit area.
      How to make it compatible with different sizes. 
         @media (max-height: 800px){
    p {font-size: 10px }
  }
what does justify content do? 
Tell how the flex property to be spaced out on the main axis.
align items is similar, but does it on the oppiste axis. 
flex 1 1 150px, grow,shrink, basis. 
align-self allows us to change the flex.
CSS GRID---------------------------
Display: Grid
Grid-template-columns. 
Grid-gap adds gaps to rows and columns.
grid-column/row takes up the space you wan with numberline/numberline (the / is important)
